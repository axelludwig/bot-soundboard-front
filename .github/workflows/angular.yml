name: Angular deployment

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ main ]
jobs:
  build:
    # using Ubuntu
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./BotSoundboardFront/BotSoundboardFront
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    - uses: actions/cache@v1 # this allows for re-using node_modules caching, making builds a bit faster.
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: NPM Install
      run: npm install
    - name: NPM Install Angular
      run: npm install -g @angular/cli > /dev/null
    - name: NPM build Angular
      run: ng build --configuration=production
      
    - name: "Push to server"
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password : ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        source: "/home/runner/work/bot-soundboard-front/bot-soundboard-front/BotSoundboardFront/BotSoundboardFront"
        strip_components: 4
        target: "/var/www/bot-soundboard-front/"
      
    - name: Restarting nginx
      uses: garygrossgarten/github-action-ssh@release
      with:
        command: sudo /etc/init.d/nginx restart;cd /var/www/bot-soundboard-back/;pm2 start bot-soundboard-pm2.json;pm2 restart bot-soundboard-back
        host: ${{ secrets.SSH_HOST }}
        port: ${{ secrets.SSH_PORT }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
